{"version":3,"sources":["TodoTemplate.js","TodoInsert.js","TodoListItem.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTempBlock","styled","div","TodoTemplate","children","className","FormBlock","TodoInsert","onInsert","inputEl","useRef","useState","value","setValue","onSubmit","e","preventDefault","current","focus","type","placeholder","onChange","target","ref","TodoListItemBlock","TodoListItem","todo","onToggle","onRemove","id","text","checked","onClick","cn","TodoListBlock","TodoList","todos","map","App","setTodos","nextid","useCallback","localStorage","kim","JSON","stringify","concat","filter","useEffect","localNextId","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da28b137.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n\nconst TodoTempBlock = styled.div`\n    max-width:512px;\n    margin:50px auto;\n    .app-title {\n        background:#22b8cf;\n        color:#ffffff;\n        height:4rem;\n        font-size:1.5rem;\n        // display:flex;\n        // align-items:center;\n        // justify-content:center;\n        text-align:center;\n        line-height:4rem;\n     }\n     .content { background:#fff }\n`;\n\nconst TodoTemplate = ({children}) => {\n    return (\n        <TodoTempBlock>\n            <h1 className=\"app-title\">일정관리</h1>\n            <div className=\"content\">{children}</div>\n        </TodoTempBlock>\n    );\n};\n\nexport default TodoTemplate;","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\n// 리액트 아이콘 경로는  {아이콘명}에서 앞 두글자를 소문자\n//  'react-icons/bi'\nconst FormBlock = styled.div`\n    .TodoInsert {\n        background:#495057;\n        display:flex;\n        input {\n            background:none; \n            outline:none; \n            border:none; \n            padding:0.5rem;\n            font-size:1.125rem;\n            line-height:1.5;\n            color:#fff;\n            flex:1;\n            &::placeholder { color:#dee2e6 }\n        }\n        button {\n            background:#868e96;\n            outline:none;\n            border:none;\n            color:#fff;\n            padding:0 1rem;\n            font-size:1.5rem;\n            cursor:pointer;\n            &:hover { background:#adb5bd }\n        }\n    }\n`;\n\nconst TodoInsert = ({onInsert}) => {\n    const inputEl = useRef('')\n    const [value, setValue] = useState('')\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault()\n        onInsert(value)\n        setValue('')\n        inputEl.current.focus()\n    }\n\n    return (\n        <FormBlock>\n            <form className=\"TodoInsert\" onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"할일을 입력하세요\" value={value}\n                onChange={onChange} ref={inputEl} />\n                <button type=\"submit\">\n                    <MdAdd />\n                </button>\n            </form>\n        </FormBlock>\n    );\n};\n\nexport default TodoInsert;","import React, {} from 'react';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport {MdRemoveCircleOutline,MdCheckBoxOutlineBlank, MdCheckBox} from 'react-icons/md';\n\nconst TodoListItemBlock =styled.div`\n    padding:1rem;\n    display:flex;\n    align-items:center;\n    &:nth-child(even) { background:#f8f9fa }\n    & + & { border-top:1px solid #dee2e6 }\n\n    .list { \n        flex:1;\n        display:flex;\n        align-items:center;\n        .red { color:#ff0000}\n        .text {\n            margin-left:0.5rem;\n            &.checked { text-decoration:line-through; color:red }\n        }\n     }\n    .remove { \n        color:#ff6b6b;\n        cursor:pointer;\n        font-size:1.5rem;\n    }\n`;\n\nconst TodoListItem = ({todo,onToggle, onRemove}) => {\n    const {id, text, checked} = todo\n  \n\n    return (\n        <TodoListItemBlock>\n            <div className=\"list\" onClick={()=>onToggle(id)}>\n                { checked ? <MdCheckBox className=\"red\" /> : <MdCheckBoxOutlineBlank />}\n                <div className={cn(\"text\", {checked})}>{id}{text}</div>\n            </div>\n            <div className=\"remove\" onClick={() =>onRemove(id) }>\n                <MdRemoveCircleOutline />\n            </div>\n        </TodoListItemBlock>\n    );\n};\n\nexport default TodoListItem;","import React from 'react';\nimport styled from 'styled-components';\nimport TodoListItem from './TodoListItem';\n\nconst TodoListBlock = styled.div`\n    min-height:320px;\n    max-height:513px;\n    overflow-y:auto;\n`;\n\nconst TodoList = ({todos, onToggle, onRemove}) => {\n    return (\n        <TodoListBlock>\n            {\n                todos.map( (todo) => <TodoListItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove}/> )\n            }\n        </TodoListBlock>\n    );\n};\n\nexport default TodoList;","import React, {useState, useRef, useCallback, useEffect} from 'react';\nimport TodoTemplate from './TodoTemplate';\nimport TodoInsert from './TodoInsert';\nimport TodoList from './TodoList';\nconst App = () => {\n\n  const [todos, setTodos]= useState([\n    // {id:1, text:\"일정관리1\", checked:true},\n    // {id:2, text:\"일정관리2\", checked:false},\n    // {id:3, text:\"일정관리3\", checked:true}\n  ])\n  const nextid = useRef(1)\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(todos.map( todo=> todo.id === id ? {...todo,checked:!todo.checked } : todo))\n      localStorage.kim = JSON.stringify( todos.map( todo=> todo.id === id ? {...todo,checked:!todo.checked } : todo) )\n    }\n    ,[todos])\n  \n  \n\n  const onInsert = useCallback(\n    (value) => {\n      const todo = {id:nextid.current, text:value, checked:false}\n      nextid.current = nextid.current + 1\n      setTodos( todos.concat(todo) )\n      localStorage.kim = JSON.stringify( todos.concat(todo) )\n      localStorage.nextid = JSON.stringify( nextid.current )\n    }\n     , [todos]) \n  \n  \n  const onRemove = useCallback(\n    (id) => {\n      setTodos( todos.filter( todo => todo.id !== id) )\n      localStorage.kim = JSON.stringify( todos.filter( todo => todo.id !== id ) )\n    }\n    ,[todos]) \n\n    useEffect(\n      () => {\n        const todo = localStorage.kim\n        const localNextId = localStorage.nextid\n        if (todo) {\n          setTodos( todos.concat( JSON.parse(todo) ) )\n          nextid.current = JSON.parse( localNextId )\n        }\n      }\n      , [])\n  \n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert}/>\n      <TodoList todos={todos} onToggle={onToggle} onRemove={onRemove}/>\n    </TodoTemplate>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}